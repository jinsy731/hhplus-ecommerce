version: '3.8'
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql
      - ./data/mysql/log/:/var/log/mysql
      - ./data/mysql/conf.d/:/etc/mysql/conf.d/

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  kafka:
    image: public.ecr.aws/bitnami/kafka:3.5.1
    ports:
      - "9094:9094"
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@localhost:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

  spring-app:
    build:
      context: .
      dockerfile: Dockerfile-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=load-test
    depends_on:
      - mysql
      - redis
      - kafka
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "4g"

networks:
  default:
    driver: bridge

volumes:
  redis-data:
  kafka-data:
